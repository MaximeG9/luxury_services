<?php

namespace App\Entity;

use App\Repository\CandidatRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\DBAL\Types\Types;
use Doctrine\ORM\Mapping as ORM;

#[ORM\Entity(repositoryClass: CandidatRepository::class)]
class Candidat
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column]
    private ?int $id = null;

    #[ORM\Column(length: 255, nullable:true)]
    private ?string $genre = null;

    #[ORM\Column(length: 255, nullable:true)]
    private ?string $nom = null;

    #[ORM\Column(length: 255, nullable:true)]
    private ?string $prenom = null;

    #[ORM\Column(length: 255, nullable:true)]
    private ?string $nationalite = null;

    #[ORM\Column(nullable:true)]
    private ?bool $isPasseport = null;

    #[ORM\Column(nullable:true)]
    private ?\DateTimeImmutable $dateNaissance = null;

    #[ORM\Column(length: 255, nullable:true)]
    private ?string $lieuNaissance = null;

    #[ORM\Column(nullable:true)]
    private ?bool $disponibilte = null;

    #[ORM\Column(length: 255, nullable:true)]
    private ?string $experience = null;

    #[ORM\Column(type: Types::TEXT, nullable:true)]
    private ?string $description = null;

    #[ORM\Column(type: Types::TEXT, nullable:true)]
    private ?string $note = null;

    #[ORM\Column(nullable:false)]
    private ?\DateTimeImmutable $dateCreation = null;

    #[ORM\Column(nullable:true)]
    private ?\DateTimeImmutable $dateSuppression = null;

    #[ORM\Column(length: 255, nullable:true)]
    private ?string $adresse = null;

    #[ORM\Column(length: 255, nullable:true)]
    private ?string $pays = null;

    #[ORM\OneToOne(inversedBy: 'candidat', cascade: ['persist', 'remove'])]
    #[ORM\JoinColumn(nullable: true)]
    private ?User $user = null;

    #[ORM\OneToOne(inversedBy: 'cv', cascade: ['persist', 'remove'])]
    #[ORM\JoinColumn(nullable: true)]
    private ?Media $cv = null;

    #[ORM\OneToOne(inversedBy: 'photoProfil', cascade: ['persist', 'remove'])]
    #[ORM\JoinColumn(nullable: true)]
    private ?Media $photoProfil = null;

    #[ORM\OneToOne(inversedBy: 'passeportFichier', cascade: ['persist', 'remove'])]
    #[ORM\JoinColumn(nullable: true)]
    private ?Media $passeportFichier = null;

    #[ORM\OneToMany(mappedBy: 'candidat', targetEntity: Candidature::class)]
    private Collection $candidatures;

    #[ORM\ManyToOne(inversedBy: 'Candidat')]
    private ?JobCategorie $jobCategorie = null;

    public function __construct()
    {
        $this->candidatures = new ArrayCollection();
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getGenre(): ?string
    {
        return $this->genre;
    }

    public function setGenre(string $genre): static
    {
        $this->genre = $genre;

        return $this;
    }

    public function getNom(): ?string
    {
        return $this->nom;
    }

    public function setNom(string $nom): static
    {
        $this->nom = $nom;

        return $this;
    }

    public function getPrenom(): ?string
    {
        return $this->prenom;
    }

    public function setPrenom(string $prenom): static
    {
        $this->prenom = $prenom;

        return $this;
    }

    public function getNationalite(): ?string
    {
        return $this->nationalite;
    }

    public function setNationalite(string $nationalite): static
    {
        $this->nationalite = $nationalite;

        return $this;
    }

    public function isIsPasseport(): ?bool
    {
        return $this->isPasseport;
    }

    public function setIsPasseport(bool $isPasseport): static
    {
        $this->isPasseport = $isPasseport;

        return $this;
    }

    public function getDateNaissance(): ?\DateTimeImmutable
    {
        return $this->dateNaissance;
    }

    public function setDateNaissance(\DateTimeImmutable $dateNaissance): static
    {
        $this->dateNaissance = $dateNaissance;

        return $this;
    }

    public function getLieuNaissance(): ?string
    {
        return $this->lieuNaissance;
    }

    public function setLieuNaissance(string $lieuNaissance): static
    {
        $this->lieuNaissance = $lieuNaissance;

        return $this;
    }

    public function isDisponibilte(): ?bool
    {
        return $this->disponibilte;
    }

    public function setDisponibilte(bool $disponibilte): static
    {
        $this->disponibilte = $disponibilte;

        return $this;
    }

    public function getExperience(): ?string
    {
        return $this->experience;
    }

    public function setExperience(string $experience): static
    {
        $this->experience = $experience;

        return $this;
    }

    public function getDescription(): ?string
    {
        return $this->description;
    }

    public function setDescription(string $description): static
    {
        $this->description = $description;

        return $this;
    }

    public function getNote(): ?string
    {
        return $this->note;
    }

    public function setNote(string $note): static
    {
        $this->note = $note;

        return $this;
    }

    public function getDateCreation(): ?\DateTimeImmutable
    {
        return $this->dateCreation;
    }

    public function setDateCreation(\DateTimeImmutable $dateCreation): static
    {
        $this->dateCreation = $dateCreation;

        return $this;
    }

    public function getDateSuppression(): ?\DateTimeImmutable
    {
        return $this->dateSuppression;
    }

    public function setDateSuppression(\DateTimeImmutable $dateSuppression): static
    {
        $this->dateSuppression = $dateSuppression;

        return $this;
    }

    public function getAdresse(): ?string
    {
        return $this->adresse;
    }

    public function setAdresse(string $adresse): static
    {
        $this->adresse = $adresse;

        return $this;
    }

    public function getPays(): ?string
    {
        return $this->pays;
    }

    public function setPays(string $pays): static
    {
        $this->pays = $pays;

        return $this;
    }

    public function getUser(): ?User
    {
        return $this->user;
    }

    public function setUser(User $user): static
    {
        $this->user = $user;

        return $this;
    }

    public function getCv(): ?Media
    {
        return $this->cv;
    }

    public function setCv(Media $cv): static
    {
        $this->cv = $cv;

        return $this;
    }

    public function getPhotoProfil(): ?Media
    {
        return $this->photoProfil;
    }

    public function setPhotoProfil(Media $photoProfil): static
    {
        $this->photoProfil = $photoProfil;

        return $this;
    }

    public function getPasseportFichier(): ?Media
    {
        return $this->passeportFichier;
    }

    public function setPasseportFichier(Media $passeportFichier): static
    {
        $this->passeportFichier = $passeportFichier;

        return $this;
    }

    /**
     * @return Collection<int, Candidature>
     */
    public function getCandidatures(): Collection
    {
        return $this->candidatures;
    }

    public function addCandidature(Candidature $candidature): static
    {
        if (!$this->candidatures->contains($candidature)) {
            $this->candidatures->add($candidature);
            $candidature->setCandidat($this);
        }

        return $this;
    }

    public function removeCandidature(Candidature $candidature): static
    {
        if ($this->candidatures->removeElement($candidature)) {
            // set the owning side to null (unless already changed)
            if ($candidature->getCandidat() === $this) {
                $candidature->setCandidat(null);
            }
        }

        return $this;
    }

    public function getJobCategorie(): ?JobCategorie
    {
        return $this->jobCategorie;
    }

    public function setJobCategorie(?JobCategorie $jobCategorie): static
    {
        $this->jobCategorie = $jobCategorie;

        return $this;
    }
}
